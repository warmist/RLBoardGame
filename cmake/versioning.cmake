# VERSIONING_PREFIX
set(${VERSIONING_PREFIX}_VERSION_FILE "${CMAKE_CURRENT_SOURCE_DIR}/src/version.hpp")
set(${VERSIONING_PREFIX}_DIRSTATE_FILE "${CMAKE_CURRENT_SOURCE_DIR}/.git/index")
file(STRINGS "${${VERSIONING_PREFIX}_VERSION_FILE}" ${VERSIONING_PREFIX}_VERSION_PARTS REGEX "#define ${VERSIONING_PREFIX}_VERSION_[A-Z]+[ ]+[0-9]+")

string(REGEX REPLACE ".+${VERSIONING_PREFIX}_VERSION_MAJOR[ ]+([0-9]+).*" "\\1" ${VERSIONING_PREFIX}_VERSION_MAJOR "${${VERSIONING_PREFIX}_VERSION_PARTS}")
string(REGEX REPLACE ".+${VERSIONING_PREFIX}_VERSION_MINOR[ ]+([0-9]+).*" "\\1" ${VERSIONING_PREFIX}_VERSION_MINOR "${${VERSIONING_PREFIX}_VERSION_PARTS}")
string(REGEX REPLACE ".+${VERSIONING_PREFIX}_VERSION_PATCH[ ]+([0-9]+).*" "\\1" ${VERSIONING_PREFIX}_VERSION_PATCH "${${VERSIONING_PREFIX}_VERSION_PARTS}")

find_program(GIT_EXECUTABLE NAMES git DOC "Command line interface to the Mercurial system")
mark_as_advanced(GIT_EXECUTABLE)

set(${VERSIONING_PREFIX}_VERSION_REVISION 0)

if(GIT_EXECUTABLE)
    execute_process(
        COMMAND ${GIT_EXECUTABLE} id -n
        WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
        OUTPUT_VARIABLE REV_ID
        RESULT_VARIABLE HG_RESULT
        OUTPUT_STRIP_TRAILING_WHITESPACE
        ERROR_QUIET
    )

    if(HG_RESULT EQUAL 0)
        string(REPLACE "+" "" ${VERSIONING_PREFIX}_VERSION_REVISION ${REV_ID})
    endif()

    execute_process(
        COMMAND ${GIT_EXECUTABLE} id -i
        WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
        OUTPUT_VARIABLE ${VERSIONING_PREFIX}_VERSION_COMMIT
        RESULT_VARIABLE HG_RESULT
        OUTPUT_STRIP_TRAILING_WHITESPACE
        ERROR_QUIET
    )
endif()

set(${VERSIONING_PREFIX}_VERSION "${${VERSIONING_PREFIX}_VERSION_MAJOR}.${${VERSIONING_PREFIX}_VERSION_MINOR}.${${VERSIONING_PREFIX}_VERSION_PATCH}.${${VERSIONING_PREFIX}_VERSION_REVISION}")

set(${VERSIONING_PREFIX}_VERSION_INTERNAL "${${VERSIONING_PREFIX}_VERSION_MAJOR}.${${VERSIONING_PREFIX}_VERSION_MINOR}.${${VERSIONING_PREFIX}_VERSION_PATCH}.${${VERSIONING_PREFIX}_VERSION_REVISION} ${${VERSIONING_PREFIX}_VERSION_COMMIT}")

set(${VERSIONING_PREFIX}_SOVERSION "${${VERSIONING_PREFIX}_VERSION_MAJOR}.${${VERSIONING_PREFIX}_VERSION_MINOR}")
set(${VERSIONING_PREFIX}_LIBVERSION "${${VERSIONING_PREFIX}_VERSION_MAJOR}.${${VERSIONING_PREFIX}_VERSION_MINOR}.${${VERSIONING_PREFIX}_VERSION_PATCH}")

# Create a dependency on version file.
#   We never use output of the following command but CMake will rerun
#   automatically if the version file changes.
configure_file("${${VERSIONING_PREFIX}_VERSION_FILE}" "${CMAKE_BINARY_DIR}/junk/version.junk" COPYONLY)
configure_file("${${VERSIONING_PREFIX}_DIRSTATE_FILE}" "${CMAKE_BINARY_DIR}/junk/index.junk" COPYONLY)
